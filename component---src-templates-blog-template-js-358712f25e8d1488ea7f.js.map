{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/templates/blogTemplate.js","webpack:///./src/components/bordered-title.js"],"names":["ListLink","props","style","display","marginRight","to","children","Header","siteTitle","margin","maxWidth","padding","width","justifyContent","flexDirection","className","textAlign","textShadow","backgroundImage","textDecoration","color","listStyle","defaultProps","Layout","data","site","siteMetadata","title","borderTopStyle","borderTopWidth","marginTop","minHeight","paddingTop","Date","getFullYear","href","Template","markdownRemark","frontmatter","html","date","dangerouslySetInnerHTML","__html","pageQuery","BorderedTitle"],"mappings":"sKAIMA,EAAW,SAAAC,GAAK,OACpB,wBAAIC,MAAO,CAAEC,QAAQ,eAAiBC,YAAY,SAChD,kBAAC,OAAD,CAAMC,GAAIJ,EAAMI,IAAKJ,EAAMK,YAIzBC,EAAS,SAAC,GAAD,EAAGC,UAAH,OACb,yBAAKN,MAAO,CAAEO,OAAO,SAAWC,SAAS,QAAUC,QAAQ,wBACzD,4BAAQT,MAAO,CAAEU,MAAO,OAAQT,QAAS,cAAeU,eAAgB,gBAAiBC,cAAe,QACtG,0BAAMZ,MAAO,CAACC,QAAS,WAErB,0BAAMY,UAAU,cAChB,kBAAC,OAAD,CAAMV,GAAG,IAAIH,MAAO,CAAEc,UAAW,SAAUC,WAAW,OAASC,gBAAgB,OAASC,eAAe,OAASC,MAAM,UACpH,mCAAQ,6BAAR,kBAEA,yBAAKL,UAAU,oBAAf,sEAGJ,wBAAIb,MAAO,CAAEmB,UAAU,SACrB,kBAAC,EAAD,CAAUhB,GAAG,KAAb,QACA,kBAAC,EAAD,CAAUA,GAAG,cAAb,YACA,kBAAC,EAAD,CAAUA,GAAG,YAAb,cAURE,EAAOe,aAAe,CACpBd,UAAU,IAGGD,Q,oBCaAgB,IArCA,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SACVkB,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQhB,UAAWgB,EAAKC,KAAKC,aAAaC,QAC1C,yBAAKZ,UAAY,kBACf,8BAAOT,GACP,4BAAQJ,MAAO,CACb0B,eAAe,QACfC,eAAe,MACfC,UAAW,SACXC,UAAU,OACVC,WAAW,WALb,MAOK,IAAIC,MAAOC,cAPhB,2BASE,uBAAGC,KAAK,4BAAR,UACA,4CAAiB,uBAAGA,KAAK,mCAAR,e,6ICzC3B,8HAIe,SAASC,EAAT,GAEX,IACMC,EADP,EADDb,KAEQa,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACrB,OACE,kBAAC,IAAD,KACE,yBAAKxB,UAAU,uBACb,yBAAKA,UAAU,aACb,4BAAKuB,EAAYX,OACjB,4BAAKW,EAAYE,MACjB,yBACEzB,UAAU,oBACV0B,wBAAyB,CAAEC,OAAQH,QAQxC,IAAMI,EAAS,c,kCCzBtB,yBAQeC,IANO,SAAC,GAAD,IAAGjB,EAAH,EAAGA,MAAH,OAClB,yBAAKZ,UAAU,sBACX,4BAAKY,GACL","file":"component---src-templates-blog-template-js-358712f25e8d1488ea7f.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\nconst Header = ({ siteTitle }) => (\n  <div style={{ margin: `0 auto`, maxWidth: `60rem`, padding: `1rem 1.0875rem 0rem` }}>\n    <header style={{ width: '100%', display: 'inline-flex', justifyContent: 'space-between', flexDirection: 'row' }}>\n      <span style={{display: 'block'}}></span>\n      \n        <span className=\"site-title\">\n        <Link to=\"/\" style={{ textAlign: 'center', textShadow: `none`, backgroundImage: `none`, textDecoration: `none`, color: `black` }}>\n          <h1>The <br/>Feedback Loop</h1>\n          </Link>\n          <div className=\"site-description\">On creating digital tools and human-computer interactions in them</div>\n        </span>\n      \n      <ul style={{ listStyle: `none`}}>\n        <ListLink to=\"/\">Home</ListLink>\n        <ListLink to=\"/writings/\">Writings</ListLink>\n        <ListLink to=\"/author/\">Author</ListLink>\n      </ul>\n  </header>\n</div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport BorderedTitle from \"../components/bordered-title\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div className = \"page-container\">\n        <main>{children}</main>\n        <footer style={{\n          borderTopStyle: `solid`,\n          borderTopWidth: `1px`,\n          marginTop: '1.5rem',\n          minHeight: `100%`,\n          paddingTop: `1.5rem`\n        }}>\n          Â© {new Date().getFullYear()} Arttu V. Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          <span>, icons by <a href=\"https://webkul.github.io/vivid/\">Vivid</a></span>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <div className=\"blog-post-container\">\n        <div className=\"blog-post\">\n          <h1>{frontmatter.title}</h1>\n          <h2>{frontmatter.date}</h2>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`","import React from \"react\"\n\nconst BorderedTitle = ({ title }) => (\n    <div className=\"bordered-title-bar\">\n        <h4>{title}</h4>\n        <div></div>\n    </div>\n)\nexport default BorderedTitle\n"],"sourceRoot":""}