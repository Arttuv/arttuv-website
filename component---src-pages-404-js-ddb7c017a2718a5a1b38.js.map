{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["SEO","title","description","image","article","pathname","useLocation","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","url","name","content","property","defaultProps","NotFoundPage"],"mappings":"2eAYMA,EAAM,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAChCC,EAAaC,wBAAbD,SAD8C,SAE9CE,KASCC,aANPC,EALoD,EAKpDA,aACAC,EANoD,EAMpDA,cACAC,EAPoD,EAOpDA,mBACAC,EARoD,EAQpDA,QACAC,EAToD,EASpDA,aACAC,EAVoD,EAUpDA,gBAGIC,EAAM,CACVd,MAAOA,GAASQ,EAChBP,YAAaA,GAAeS,EAC5BR,MAAM,GAAIS,GAAUT,GAASU,GAC7BG,IAAI,GAAIJ,EAAUP,GAGpB,OACE,kBAAC,IAAD,CAAQJ,MAAOc,EAAId,MAAOS,cAAeA,GACvC,0BAAMO,KAAK,cAAcC,QAASH,EAAIb,cACtC,0BAAMe,KAAK,QAAQC,QAASH,EAAIZ,QAE/BY,EAAIC,KAAO,0BAAMG,SAAS,SAASD,QAASH,EAAIC,OAE/CZ,EAAiB,KAAS,0BAAMe,SAAS,UAAUD,QAAQ,YAE5DH,EAAId,OAAS,0BAAMkB,SAAS,WAAWD,QAASH,EAAId,QAEpDc,EAAIb,aACH,0BAAMiB,SAAS,iBAAiBD,QAASH,EAAIb,cAG9Ca,EAAIZ,OAAS,0BAAMgB,SAAS,WAAWD,QAASH,EAAIZ,QAErD,0BAAMc,KAAK,eAAeC,QAAQ,wBAEjCJ,GACC,0BAAMG,KAAK,kBAAkBC,QAASJ,IAGvCC,EAAId,OAAS,0BAAMgB,KAAK,gBAAgBC,QAASH,EAAId,QAErDc,EAAIb,aACH,0BAAMe,KAAK,sBAAsBC,QAASH,EAAIb,cAG/Ca,EAAIZ,OAAS,0BAAMc,KAAK,gBAAgBC,QAASH,EAAIZ,UAK7CH,MASfA,EAAIoB,aAAe,CACjBnB,MAAO,KACPC,YAAa,KACbC,MAAO,KACPC,SAAS,I,kCC/EX,wDAaeiB,UARM,kBACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKpB,MAAM,mBACX,yCACA","file":"component---src-pages-404-js-ddb7c017a2718a5a1b38.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useLocation } from \"@reach/router\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ title, description, image, article }) => {\n  const { pathname } = useLocation()\n  const { site } = useStaticQuery(query)\n\n  const {\n    defaultTitle,\n    titleTemplate,\n    defaultDescription,\n    siteUrl,\n    defaultImage,\n    twitterUsername,\n  } = site.siteMetadata\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image || defaultImage}`,\n    url: `${siteUrl}${pathname}`,\n  }\n\n  return (\n    <Helmet title={seo.title} titleTemplate={titleTemplate}>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n\n      {seo.url && <meta property=\"og:url\" content={seo.url} />}\n\n      {(article ? true : null) && <meta property=\"og:type\" content=\"article\" />}\n\n      {seo.title && <meta property=\"og:title\" content={seo.title} />}\n\n      {seo.description && (\n        <meta property=\"og:description\" content={seo.description} />\n      )}\n\n      {seo.image && <meta property=\"og:image\" content={seo.image} />}\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n\n      {twitterUsername && (\n        <meta name=\"twitter:creator\" content={twitterUsername} />\n      )}\n\n      {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n\n      {seo.description && (\n        <meta name=\"twitter:description\" content={seo.description} />\n      )}\n\n      {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n    </Helmet>\n  )\n}\n\nexport default SEO\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  article: PropTypes.bool,\n}\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  article: false,\n}\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        titleTemplate\n        defaultDescription: description\n        siteUrl: url\n        defaultImage: image\n        twitterUsername\n      }\n    }\n  }\n`","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}