{"version":3,"sources":["webpack:///./src/components/post-link.js","webpack:///./src/components/latest-writings-item.js","webpack:///./src/components/all-writings.js","webpack:///./src/pages/writings.js"],"names":["LatestWritingsItem","post","className","frontmatter","featuredImage","sizes","childImageSharp","style","margin","width","to","path","title","summary","excerpt","tags","date","query","render","data","allMarkdownRemark","edges","filter","edge","node","map","key","id","IndexPage","small"],"mappings":"8FAAA,qB,m67BCAA,oEAqCeA,IAhCY,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAEzB,6BAASC,UAAU,wBACjB,yBAAKA,UAAU,8BAEuB,OAAnCD,EAAKE,YAAYC,eAChB,kBAAC,IAAD,CACIC,MAAOJ,EAAKE,YAAYC,cAAcE,gBAAgBD,MACtDE,MAAO,CAACC,OAAQ,YAAaC,MAAO,YAK1C,6BAEE,kBAAC,OAAD,CAAMC,GAAIT,EAAKE,YAAYQ,MACzB,4BAAKV,EAAKE,YAAYS,QAEM,OAA7BX,EAAKE,YAAYU,SAAqB,uBAAGX,UAAU,gCAAgCD,EAAKE,YAAYU,SACvE,OAA7BZ,EAAKE,YAAYU,SAAqB,uBAAGX,UAAU,gCAAgCD,EAAKa,SAEzF,yBAAKZ,UAAU,0CACY,OAA1BD,EAAKE,YAAYY,MAChB,yBAAKb,UAAU,8BAA8BD,EAAKE,YAAYY,MAE5D,kBAAC,OAAD,CAAML,GAAIT,EAAKE,YAAYQ,MAC1BV,EAAKE,YAAYa,W,8HCzBf,oBACb,kBAAC,cAAD,CACEC,MAAK,aA4BLC,OAAQ,SAAAC,GAAI,OACAA,EAAKC,kBAAkBC,MAClBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKrB,YAAYa,QACvCS,KAAI,SAAAF,GAAI,OAAI,kBAAC,IAAD,CAAoBG,IAAKH,EAAKC,KAAKG,GAAI1B,KAAMsB,EAAKC,WAhCjF,UCIaI,UALG,kBAChB,kBAAC,IAAD,CAAQC,MAAM,SACZ,kBAAC,EAAD","file":"component---src-pages-writings-js-302303be900f9e36d197.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ post }) => (\n  <div>\n    <Link to={post.frontmatter.path}>\n      {post.frontmatter.title} ({post.frontmatter.date})\n    </Link>\n  </div>\n)\nexport default PostLink\n","import React from \"react\"\nimport Img from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { BackgroundImage } from \"gatsby-background-image\"\n  \nconst LatestWritingsItem = ({ post }) => (\n\n  <article className=\"latest-writings-item\">\n    <div className=\"latest-writings-item-image\">\n    \n      {post.frontmatter.featuredImage !== null && (\n        <Img \n            sizes={post.frontmatter.featuredImage.childImageSharp.sizes}\n            style={{margin: 'auto auto', width: '128px'}}\n          />\n      )}\n\n    </div>\n      <div>\n        \n        <Link to={post.frontmatter.path}>\n          <h3>{post.frontmatter.title}</h3>\n        </Link>\n        {post.frontmatter.summary !== null && (<p className=\"latest-writings-item-summary\">{post.frontmatter.summary}</p>)} \n        {post.frontmatter.summary === null && (<p className=\"latest-writings-item-summary\">{post.excerpt}</p>)} \n        \n        <div className=\"latest-writings-item-summary-read-more\">\n        {post.frontmatter.tags !== null && ( \n          <div className=\"latest-writings-item-topic\">{post.frontmatter.tags}</div>\n        )}\n            <Link to={post.frontmatter.path}>\n            {post.frontmatter.date}\n            </Link>\n        </div>\n      </div>\n  </article>\n)\nexport default LatestWritingsItem\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport PostLink from \"../components/post-link\"\nimport Layout from \"../components/layout\"\nimport LatestWritingsItem from \"./latest-writings-item\"\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n    query {\n        allMarkdownRemark( sort: { order: DESC, fields: [frontmatter___date] }) {\n          edges {\n            node {\n              id\n              excerpt(pruneLength: 250)\n              frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n                path\n                title\n                tags\n                summary\n                featuredImage {\n                    childImageSharp {\n                        sizes(maxWidth: 250) {\n                        ...GatsbyImageSharpSizes\n                        }\n                    }\n                }\n              }\n              \n            }\n          }\n        }\n      }     \n    `}\n\n    render={data => (\n                data.allMarkdownRemark.edges\n                    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n                    .map(edge => <LatestWritingsItem key={edge.node.id} post={edge.node} />)\n       \n    )}\n    \n  />\n)\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport PostLink from \"../components/post-link\"\nimport Layout from \"../components/layout\"\nimport AllWritings from \"../components/all-writings\"\n\nconst IndexPage = () => (\n  <Layout small=\"small\">\n    <AllWritings />\n  </Layout>)\n\nexport default IndexPage"],"sourceRoot":""}