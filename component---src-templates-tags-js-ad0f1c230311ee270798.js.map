{"version":3,"file":"component---src-templates-tags-js-ad0f1c230311ee270798.js","mappings":"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","sources":["webpack://arttuv-website/./src/components/header.js","webpack://arttuv-website/./src/components/footer.js","webpack://arttuv-website/./src/components/layout.js","webpack://arttuv-website/./src/templates/tags.js"],"sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst ListLink = props => (\n  <li>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\nfunction getClassNames(small, dark) {\n  let classNames = small ? \"small-header\" : \"normal-header\";\n  classNames += dark ? \" dark-header\" : \" light-header\";\n  return classNames;\n}\n\nconst Header = ({ small, dark }) => \n(\n  <>\n    <a name=\"top\"></a>\n      <header className={getClassNames(small, dark)}>\n        {!small ? (<span style={{display: 'block'}}></span>) : null}\n          {!small && (\n            <span className=\"site-title\">\n            <Link to=\"/\" style={{ textAlign: 'center', textShadow: `none`, backgroundImage: `none`, textDecoration: `none`, color: `black` }}>\n              <h1>A. <br /> Viljakainen</h1>\n            </Link>\n\n            <div className=\"site-description\">On creating digital tools and human-computer interactions in them</div>\n          </span>\n          )}\n          {small && (\n            <span className=\"site-title-small\">\n            <Link to=\"/\" style={{ textAlign: 'center', textShadow: `none`, backgroundImage: `none`, textDecoration: `none`, color: `black` }}>\n              <h1>A. Viljakainen</h1>\n            </Link>\n          </span>\n          )}    \n\n        <ul style={{ listStyle: `none`}}>\n          <ListLink to=\"/\">Home</ListLink>\n          <ListLink to=\"/writings/\">Writings</ListLink>\n          <ListLink to=\"/author/\">Author</ListLink>\n        </ul>\n    </header>\n  </>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst ListLink = props => (\n  <li>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\nconst Footer = ({ siteTitle, small}) => (\n\n    <footer name=\"footer\" style={{\n        borderTopStyle: `solid`,\n        borderTopWidth: `1px`,\n        marginTop: '1.5rem',\n        minHeight: `100%`,\n        paddingTop: `1.5rem`\n      }}>\n  <div className=\"footerContent\">\n\n  <div>\n  <div className=\"rssSubscribe\">\n                <h1>Follow the updates on this site</h1>\n                <div>\n                    <a href=\"/rss.xml\">All posts RSS link</a>\n                    <p>Yes, RSS still exists \\o/ Full text is provided in RSS so you'll never need to visit this site if you don't want to.</p>\n                </div>\n            </div>\n    </div>\n    <div className=\"bottomNavigation\">\n        <ul style={{ listStyle: `none`}}>\n          <ListLink to=\"/\">Home</ListLink>\n          <ListLink to=\"/writings/\">Writings</ListLink>\n          <ListLink to=\"/author/\">Author</ListLink>\n          <a href=\"#top\">^ Top</a>\n        </ul>\n      </div>\n  </div>\n        <div className=\"copyright\">\n          <p>\n          Â© {new Date().getFullYear()} Arttu Viljakainen. \n          All texts published are under <a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">Creative Commons Attribution-ShareAlike License</a> - attribution is required. Ask permission before using any photos.\n          Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          <span>, icons by <a href=\"https://webkul.github.io/vivid/\">Vivid</a> and <a href=\"https://www.iconfinder.com/Flatart\">Flatart</a></span>\n          </p>\n      </div>\n      </footer>\n      )\n\nFooter.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nFooter.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\";\nimport Footer from \"./footer\";\nimport \"./layout.css\"\n\nfunction getClassNames(small, dark) {\n  let classNames = small ? \"small-header-container\" : \"normal-header-container\";\n  classNames += dark ? \" dark-header-container\" : \" light-header-container\";\n  return classNames;\n}\n\nconst Layout = ({ children, small, dark }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <a name=\"top\"></a>\n      <div className={\"header-container \" + getClassNames(small, dark)}>\n        <Header siteTitle={data.site.siteMetadata.title} small={small}/>\n      </div>\n      <div className = {\"page-container\"}>\n        <main>{children}</main>\n        <Footer siteTitle={data.site.siteMetadata.title} small={small}/>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Layout from \"../components/layout\"\n// Components\nimport { Link, graphql } from \"gatsby\"\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n\n  return (\n    <Layout>\n    <div>\n      <h1>{tagHeader}</h1>\n      <ul>\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          const { title } = node.frontmatter\n          return (\n            <li key={node.frontmatter.path}>\n              <Link to={node.frontmatter.path}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul>\n      \n      <Link to=\"/tags\">All tags</Link>\n    </div>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n        \n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`"],"names":["ListLink","props","Link","to","children","getClassNames","small","dark","classNames","Header","name","className","style","display","textAlign","textShadow","backgroundImage","textDecoration","color","listStyle","defaultProps","siteTitle","Footer","borderTopStyle","borderTopWidth","marginTop","minHeight","paddingTop","href","Date","getFullYear","data","useStaticQuery","site","siteMetadata","title","pageContext","tag","allMarkdownRemark","edges","totalCount","tagHeader","map","node","fields","slug","frontmatter","key","path"],"sourceRoot":""}