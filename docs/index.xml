<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arttu Viljakainen</title>
    <link>http://arttuv.com/</link>
    <description>Recent content on Arttu Viljakainen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Jun 2017 21:46:54 +0300</lastBuildDate>
    
	<atom:link href="http://arttuv.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reference types in Java</title>
      <link>http://arttuv.com/post/java/java-reference-types/</link>
      <pubDate>Thu, 15 Jun 2017 21:46:54 +0300</pubDate>
      
      <guid>http://arttuv.com/post/java/java-reference-types/</guid>
      <description>Different reference types in Java provide access to the object lifecycle giving us tools for object reuse (object pools) and even a possibility to achieve reliable object finalization.
Differences between references in Java can be explained by reachability. This is what Java API Specification says about reachability:
 Reachability from strongest to weakest:
An object is strongly reachable if it can be reached by some thread without traversing any reference objects.</description>
    </item>
    
    <item>
      <title>Nielsen: Web UX 2016 vs 2004</title>
      <link>http://arttuv.com/post/usability/nielsen-web-ux-2016-vs-2004/</link>
      <pubDate>Thu, 11 May 2017 18:48:47 +0300</pubDate>
      
      <guid>http://arttuv.com/post/usability/nielsen-web-ux-2016-vs-2004/</guid>
      <description>Jakob Nielsen had a keynote at the UX Conference on Web UX 2016 vs 2004. They made a study on web UX on 2016 and reflected that to the results from similar study in 2004. The video is only 20 minutes and worth watching. Below you can find a short summary.
  Link to YouTube or to their Nielsen Norman Group website.
Abbreviated to one paragraph  Most of the problems are in findability and search, so information architecture is a crucial thing and worth attending to.</description>
    </item>
    
    <item>
      <title>Designing for usability 1985</title>
      <link>http://arttuv.com/post/usability/designing-for-usability-1985/</link>
      <pubDate>Thu, 11 May 2017 18:48:24 +0300</pubDate>
      
      <guid>http://arttuv.com/post/usability/designing-for-usability-1985/</guid>
      <description>Itâ€™s interesting how old many of the usability (and software engineering) ideas are. I run into an old classic: Designing for Usability: Key Principles and What Designers Think (Gould &amp;amp; Lewis, 1985). Gould and Lewis introduce three principles that they argue are vital for creating usable applications, and then they go through common arguments against them and try to justify why these principles matter.
These three principles for designing for usability are (Gould &amp;amp; Lewis, 1985):</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://arttuv.com/about/</link>
      <pubDate>Tue, 28 Jul 2015 09:51:51 -0400</pubDate>
      
      <guid>http://arttuv.com/about/</guid>
      <description>I&amp;rsquo;m a software developer interested in human-computer interaction and everything related to usability. I have a master&amp;rsquo;s degree on software development including basic studies in psychology and cognitive science.
Rather unconventionally most of my professional experience is from creating desktop applications. Lately they have been distributed and security critical professional applications.
That&amp;rsquo;s also what I&amp;rsquo;m mostly interested in human-computer interaction - security critical and professional applications. This also means that my focus is somewhat different than on people developing public websites and mobile apps.</description>
    </item>
    
  </channel>
</rss>