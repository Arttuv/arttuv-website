{"version":3,"file":"component---src-pages-index-js-dafac6525d1d2e89fc26.js","mappings":"mMA0BA,EAvBuB,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACrB,2BAASC,UAAW,qCAA4CD,GAC5D,gCACE,2BAC6B,OAA1BD,EAAKG,YAAYC,MAChBJ,EAAKG,YAAYC,KAAKC,KAAI,SAAAC,GACxB,OAAO,uBAAKJ,UAAU,6BAA6BK,IAAK,6BAA+BD,GACpFA,MAGP,gBAAC,EAAAE,KAAD,CAAMC,GAAIT,EAAKG,YAAYO,MACzB,0BAAKV,EAAKG,YAAYQ,QAExB,uBAAKT,UAAU,0CACb,4BACGF,EAAKG,YAAYS,KACjBZ,EAAKa,OAAOC,YAAYC,WC4BvC,EA3CwB,kBACtB,gBAAC,EAAAC,YAAD,CACEC,MAAK,aA+BLC,OAAS,SAAAC,GAAI,OACDA,EAAKC,kBAAkBC,MAClBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKrB,YAAYS,QACvCU,QAAO,SAAAC,GAAI,MAAmC,mBAA/BA,EAAKC,KAAKrB,YAAYF,QACrCI,KAAK,SAACkB,EAAME,GAAP,OAAiB,gBAAC,EAAD,CAAgBlB,IAAKgB,EAAKC,KAAKE,GAAI1B,KAAMuB,EAAKC,c,8BCRzF,EA7B2B,SAAC,GAAD,IAAGxB,EAAH,EAAGA,KAAH,OAEzB,2BAASE,UAAU,uBAAuBK,IAAKP,EAAKG,YAAYQ,OAC5D,2BACA,uBAAKT,UAAU,YACgB,OAA1BF,EAAKG,YAAYC,MACpBJ,EAAKG,YAAYC,KAAKC,KAAK,SAAAC,GACzB,OAAO,wBAAMC,IAAK,WAAWD,GAC1BA,OAKL,gBAAC,EAAAE,KAAD,CAAMN,UAAU,6BAA6BO,GAAIT,EAAKG,YAAYO,MAChE,0BAAKV,EAAKG,YAAYQ,QAExB,2BACE,qBAAGT,UAAU,4BACX,8BAASF,EAAKG,YAAYS,MAAe,KAAOZ,EAAKa,OAAOC,YAAYC,OAG9C,OAA7Bf,EAAKG,YAAYwB,SAAqB,qBAAGzB,UAAU,gCAAgCF,EAAKG,YAAYwB,SACvE,OAA7B3B,EAAKG,YAAYwB,SAAqB,qBAAGzB,UAAU,gCAAgCF,EAAK4B,SACrD,OAAnC5B,EAAKG,YAAY0B,eACd,gBAAC,EAAAC,EAAD,CAAaC,OAAOC,EAAAA,EAAAA,GAAShC,EAAKG,YAAY0B,cAAcI,sBCsBxE,EA9CuB,kBACrB,gBAAC,EAAAjB,YAAD,CACEC,MAAK,YAiCLC,OAAQ,SAAAC,GAAI,OACAA,EAAKC,kBAAkBC,MAClBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKrB,YAAYS,QACvCU,QAAO,SAAAC,GAAI,MAAmC,mBAA/BA,EAAKC,KAAKrB,YAAYF,QACrCI,KAAI,SAAAkB,GAAI,OAAI,gBAAC,EAAD,CAAoBhB,IAAKgB,EAAKC,KAAKE,GAAI1B,KAAMuB,EAAKC,cCpBnF,G,QAbkB,kBAChB,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKb,MAAM,SACX,2BAAK,gBAAC,IAAD,CAAeA,MAAM,qBAC1B,uBAAKT,UAAU,mBACb,gBAAC,EAAD,CAAgBA,UAAU,qBAE1B,uBAAKA,UAAU,WACb,gBAAC,EAAD","sources":["webpack://arttuv-website/./src/components/gallery-article.js","webpack://arttuv-website/./src/components/writings-gallery.js","webpack://arttuv-website/./src/components/latest-writings-item.js","webpack://arttuv-website/./src/components/latest-writings.js","webpack://arttuv-website/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst GalleryArticle = ({ post, type }) => (\n  <article className={\"archive-article-item \" + \"gallery-item-\" + type}>\n      <>\n        <div>\n          {post.frontmatter.tags !== null && (\n            post.frontmatter.tags.map(tag => {\n              return <div className=\"archive-article-item-topic\" key={\"gallery-article-item-topic\" + tag}>\n                {tag}\n              </div>\n            }))}\n          <Link to={post.frontmatter.path}>\n            <h3>{post.frontmatter.title}</h3>\n          </Link>\n          <div className=\"archive-article-item-summary-read-more\">\n            <span>\n              {post.frontmatter.date}\n              {post.fields.readingTime.text}\n            </span>\n          </div>\n        </div>\n      </>\n  </article>\n)\nexport default GalleryArticle\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport GalleryArticle from \"./gallery-article\"\n\nconst WritingsGallery = () => (\n  <StaticQuery\n    query={graphql`\n    query {\n        allMarkdownRemark(skip: 2, limit: 10, sort: { order: DESC, fields: [frontmatter___date] }) {\n          edges {\n            node {\n              id\n              excerpt(pruneLength: 250)\n              frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n                type\n                path\n                title\n                tags\n                summary\n                featuredImage {\n                  childImageSharp {\n                    gatsbyImageData(layout: CONSTRAINED)\n                  }\n                }\n              }\n              fields {\n                slug\n                readingTime {\n                  text\n                }\n              }\n            }\n          }\n        }\n      }     \n    `}\n    render={ data => (\n                data.allMarkdownRemark.edges\n                    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n                    .filter(edge => edge.node.frontmatter.type !== \"graphical-page\")\n                    .map( (edge, index) => <GalleryArticle key={edge.node.id} post={edge.node} />)\n    )}\n    \n  />\n)\n\nexport default WritingsGallery;","import React from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { Link } from \"gatsby\"\n\nconst LatestWritingsItem = ({ post }) => (\n\n  <article className=\"latest-writings-item\" key={post.frontmatter.title}>\n      <div>\n      <div className=\"category\">\n          {post.frontmatter.tags !== null && ( \n        post.frontmatter.tags.map( tag => {\n          return <span key={\"link-to-\"+tag}>\n            {tag}\n            </span>\n        }))\n      }\n    </div>\n        <Link className=\"latest-writings-item-title\" to={post.frontmatter.path}>\n          <h3>{post.frontmatter.title}</h3>\n        </Link>\n        <div>\n          <p className=\"latest-writing-item-date\">\n            <strong>{post.frontmatter.date}</strong>{\", \" + post.fields.readingTime.text}\n          </p>\n        </div>\n        {post.frontmatter.summary !== null && (<p className=\"latest-writings-item-summary\">{post.frontmatter.summary}</p>)} \n        {post.frontmatter.summary === null && (<p className=\"latest-writings-item-summary\">{post.excerpt}</p>)} \n        {post.frontmatter.featuredImage !== null && (\n            <GatsbyImage image={getImage(post.frontmatter.featuredImage.childImageSharp)}/>\n            )}\n      </div>\n  </article>\n)\nexport default LatestWritingsItem\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport LatestWritingsItem from \"./latest-writings-item\"\n\nconst LatestWritings = () => (\n  <StaticQuery\n    query={graphql`\n    query {\n        allMarkdownRemark( limit: 2, sort: { order: DESC, fields: [frontmatter___date] }) {\n          edges {\n            node {\n              id\n              excerpt(pruneLength: 250)\n              frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n                type\n                path                \n                title\n                tags\n                summary\n                featuredImage {\n                  childImageSharp {\n                    gatsbyImageData(layout: CONSTRAINED)\n                  }\n                    \n                }\n              }\n              fields {\n                slug\n                readingTime {\n                  text\n                }\n              }\n            }\n          }\n        }\n      }     \n    `}\n\n    render={data => (\n                data.allMarkdownRemark.edges\n                    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n                    .filter(edge => edge.node.frontmatter.type !== \"graphical-page\")\n                    .map(edge => <LatestWritingsItem key={edge.node.id} post={edge.node} />)\n       \n    )}\n    \n  />\n)\n\nexport default LatestWritings;","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport WritingsGallery from \"../components/writings-gallery\"\nimport Seo from \"../components/seo\"\nimport BorderedTitle from \"../components/bordered-title\"\nimport LatestWritings from \"../components/latest-writings\"\nimport TagsComponent from \"../components/tags-component\"\n\nconst IndexPage = () => (\n  <Layout>\n    <Seo title=\"Home\"/>\n    <div><BorderedTitle title=\"Latest Writings\" /></div>\n    <div className=\"latest-writings\">\n      <LatestWritings className=\"latest-writings\" />\n    </div>\n      <div className=\"archive\">\n        <WritingsGallery />\n      </div>\n    </Layout>\n)\n\nexport default IndexPage\n"],"names":["post","type","className","frontmatter","tags","map","tag","key","Link","to","path","title","date","fields","readingTime","text","StaticQuery","query","render","data","allMarkdownRemark","edges","filter","edge","node","index","id","summary","excerpt","featuredImage","G","image","getImage","childImageSharp"],"sourceRoot":""}