{"version":3,"file":"component---src-pages-writings-js-f0088506ea6b576c4f93.js","mappings":"oMAoBA,G,QAfwB,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,OAEtB,2BAASC,UAAU,oBAAoBC,IAAKF,EAAKG,YAAYC,OAC7D,gBAAC,EAAAC,KAAD,CAAMC,GAAIN,EAAKG,YAAYI,MACzB,0BAAKP,EAAKG,YAAYC,QAExB,4BACI,8BAASJ,EAAKG,YAAYK,MAAe,KAAOR,EAAKS,OAAOC,YAAYC,MAE5E,2BACE,yBAAIX,EAAKG,YAAYS,aCkCzB,EA7CoB,kBAClB,gBAAC,EAAAC,YAAD,CACEC,MAAK,YAgCLC,OAAQ,SAAAC,GAAI,OACAA,EAAKC,kBAAkBC,MAClBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKlB,YAAYK,QACvCW,QAAO,SAAAC,GAAI,MAAmC,mBAA/BA,EAAKC,KAAKlB,YAAYmB,QACrCC,KAAI,SAAAH,GAAI,OAAI,gBAAC,EAAD,CAAiBlB,IAAKkB,EAAKC,KAAKG,GAAIxB,KAAMoB,EAAKC,c,oBCxBhF,EAZqB,kBACnB,gCACE,gBAAC,IAAD,CAAKjB,MAAM,aACX,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAeA,MAAM,aACrB,2BAASH,UAAU,gBACjB,gBAAC,EAAD","sources":["webpack://arttuv-website/./src/components/all-writings-item.js","webpack://arttuv-website/./src/components/all-writings.js","webpack://arttuv-website/./src/pages/writings.js"],"sourcesContent":["import React from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { Link } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\n\nconst AllWritingsItem = ({ post }) => (\n\n  <article className=\"all-writings-item\" key={post.frontmatter.title}>\n  <Link to={post.frontmatter.path}>\n    <h2>{post.frontmatter.title}</h2>\n  </Link>\n  <time>\n      <strong>{post.frontmatter.date}</strong>{\", \" + post.fields.readingTime.text}\n    </time>\n  <div>\n    <p>{post.frontmatter.summary}</p>\n  </div>\n\n  </article>\n)\nexport default AllWritingsItem\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport AllWritingsItem from \"./all-writings-item\"\n\nconst AllWritings = () => (\n  <StaticQuery\n    query={graphql`\n    query {\n      allMarkdownRemark( sort: { order: DESC, fields: [frontmatter___date] }) {\n        edges {\n          node {\n            id\n            excerpt(pruneLength: 250)\n            frontmatter {\n              date(formatString: \"MMMM DD, YYYY\")\n              path\n              title\n              type\n              tags\n              summary\n              featuredImage {\n                childImageSharp {\n                  gatsbyImageData(layout: CONSTRAINED)\n                } \n              }\n            }\n            fields {\n              slug\n              readingTime {\n                text\n              }\n            }\n          }\n        }\n      }\n    }     \n  `}\n\n    render={data => (\n                data.allMarkdownRemark.edges\n                    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n                    .filter(edge => edge.node.frontmatter.type !== \"graphical-page\")\n                    .map(edge => <AllWritingsItem key={edge.node.id} post={edge.node} />)\n       \n    )}\n    \n  />\n)\n\nexport default AllWritings;","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport AllWritings from \"../components/all-writings\"\nimport BorderedTitle from \"../components/bordered-title\"\nimport Seo from \"../components/seo\"\n\nconst WritingsPage = () => (\n  <>\n    <Seo title=\"Writings\" />\n    <Layout>\n      <BorderedTitle title=\"Writings\" />\n      <article className=\"all-writings\">\n        <AllWritings />\n      </article>\n    </Layout>\n    </>\n  )\n\nexport default WritingsPage"],"names":["post","className","key","frontmatter","title","Link","to","path","date","fields","readingTime","text","summary","StaticQuery","query","render","data","allMarkdownRemark","edges","filter","edge","node","type","map","id"],"sourceRoot":""}